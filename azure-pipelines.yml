# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

jobs:
- deployment: DeploymentJob

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
    #Python27:
    #  python.version: '2.7'
    #Python35:
    #  python.version: '3.5'
    Python36:
      python.version: '3.6'
    Python37:
      python.version: '3.7'

  runOnce:
    deploy:
      steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(python.version)'
        displayName: 'Use Python $(python.version)'

      - script: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        displayName: 'Install dependencies'

      - script: |
          pip install pytest pytest-azurepipelines
          pytest
        displayName: 'pytest'

      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(Build.SourcesDirectory)'
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip'
          replaceExistingArchive: true
          verbose: # (no value); this input is optional
      - publish: $(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip
        displayName: 'Upload package'
        artifact: drop

      - task: AzureWebApp@1
        displayName: 'Deploy Azure Web App : {{ webAppName }}'
        inputs:
          azureSubscription: $(azureServiceConnectionId)
          appType: webAppLinux
          appName: $(webAppName)
          package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
          startUpCommand: 'gunicorn --bind=0.0.0.0 --workers=4 startup:app'
